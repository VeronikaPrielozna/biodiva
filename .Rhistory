y<-unlist(lapply(as.list(first.col:ncol(x)),function(x1) is.numeric((x[,x1]))))
if(all(y, na.rm = TRUE)==F){
colbad<-which(y==FALSE) + first.col-1
cat(paste("Samples",paste(names(x)[colbad],collapse=","),"are not numeric"))
cat("\n")
answ=readline(prompt="Continue and skip non-numeric columns? y/n  ")
if(answ=="y") x<-x[-colbad] else stop(paste("Function was terminated. Try to fix the dataset."))
}
if(na2null==T) x[is.na(x)]<-0
if (attrib==T){
cat(paste("Attributes of table"), "\n")
print(attributes(x))
}
cat(paste("Short data:"), "\n")
print(x[1:5,])
cat("\n")
message("You can continue.")
}
)
return(x)
}
test_data.1<-loadData()
test_data.1.
test_data.1
attr(test_data.1)
attr(test_data.1)
attr(test_data.1, )
attributes(test_data.1)
View(loadData)
rm(loadData)
?loadData
abundance(test_data.1)
#' @examples
abundance(test_data.1)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = 3), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1)
abundance(test_data.1)
rm(abundance)
abundance(test_data.1)
abundance(test_data.1)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = 3), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = 3), ...)
# text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = 3), ...)
# text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1)
abundance(test_data.1, las = 1 )
abundance(test_data.1, las = 2 )
abundance(test_data.1, las = 2, col = c("red", "green", "blue"))
abundance(test_data.1, las = 2, col = "BuPu")
abundance(test_data.1, las = 2, col = c("BuPu"))
abundance(test_data.1, las = 2, col = c("cyan", "blue4", "darkblue"))
abundance(test_data.1, las = 2, col = c("cyan4", "blue4", "darkblue"))
abundance(test_data.1, las = 2, col = c("cornflowerblue", "blue4", "darkblue"))
abundance(test_data.1, las = 2, col = c("cadetblue1", "cornflowerblue", "darkblue"))
abundance(test_data.1, las = 2, col = c("white", "cadetblue1", "darkblue"))
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkblue"))
abundance(test_data.1, las = 2, col = c("white", "darkgray", "black"))
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"))
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 20)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 25)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 15)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 13)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 12)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 14)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3 ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
# text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 14, )
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 14, ncol = 1 )
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 14, ncol = 1)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
# text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 14, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 12, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 11, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legl = 13, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 13, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 13, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 5, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 1, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 3, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 3, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 3, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 130, legl = 3, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 3, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 50, legl = 3, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 50, legl = 4, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 50, legl = 3.5, ncol = 1)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 0, legl = 3.5, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 10, legl = 3.5, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 3.5, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 7, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 10, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 13, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 12, ncol = 3)
text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.9, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 100, legl = 12, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylab = ylab, ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 200, legl = 12, ncol = 3)
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
title(ylab=ylab, line=2.5)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
title(ylab=ylab, line=4.5)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
title(ylab=ylab, line=2.5)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance", xlab = "Samples"
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
title(ylab=ylab, line=2.5)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance", xlab = "Samples",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(4,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
title(ylab=ylab, line=2.5)
title(xlab=xlab, line=2.5)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance", xlab = "Samples",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
title(ylab=ylab, line=2.5)
title(xlab=xlab, line=2.5)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 12, ncol = 3)
abundance<-function(df, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance", xlab = "Samples",
col = c("gray0", "gray48", "gray84"), ncol = 3, ...){
x<-df[,first.col:ncol(df)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(5,4,2,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c(as.expression(bquote('F'['1'])), as.expression(bquote('F'['2'])), "Other"),
ylim = c(0, maxA2 * 1.2), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2 * 1.2 + legh, ncol = ncol), ...)
title(ylab=ylab, line=2.5)
title(xlab=xlab, line = 3.5)
text(posgr, TotalA, lab = TotalA, cex = 0.7, pos = 3)
}
return(Atab)
}
abundance(test_data.1, las = 2, col = c("white", "darkgray", "darkcyan"),legh = 150, legl = 12, ncol = 3)
View(test_data)
