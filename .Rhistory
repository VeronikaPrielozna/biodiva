git remote add origin git@github.com:VeronikaPrielozna/detectD.git
git branch -M main
git push -u origin main
library(usethis)
?use_github()
edit_r_environ()
use_github(protocol = "https", auth_token= Sys.getenv("GITHUB_PAT"))
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
echo "# detectD" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:VeronikaPrielozna/detectD.git
git push -u origin main
git remote add origin git@github.com:VeronikaPrielozna/detectD.git
use_github(protocol = "https", auth_token = Sys.getenv("GITHUB_PAT"))
LoadData<-function(type="clipboard",first.col=2, na2null=T, attrib=T) {
print("Copy data into cliboard")
invisible(readline(prompt="Press [enter] to continue"))
tryCatch(silent=T,
expr = {
x<-read.table(type, h=T, sep = "\t")
message("Dataset successfully uploaded.")
},
error = function(e){
message("Dataset inaccurately uploaded, Try again.")
print(e)
},
warning = function(w){
message("Warning! Dataset inaccurately uploaded. Try again.")
print(w)
},
finally = {
message("You can continue.")
}
)
attr(x,"Spec_col")<-first.col:ncol(x)
attr(x, "Number of species")<-nrow(x)
attr(x,"Number of samples")<-ncol(x)-1
y<-unlist(lapply(as.list(first.col:ncol(x)),function(x1) is.numeric((x[,x1]))))
if(all(y, na.rm = TRUE)==F){
colbad<-which(y==FALSE) + first.col-1
cat(paste("Samples",paste(names(x)[colbad],collapse=","),"are not numeric"))
cat("\n")
answ=readline(prompt="Continue and skip non-numeric columns? y/n  ")
if(answ=="y") x<-x[-colbad] else stop(paste("Function was terminated. Try to fix the dataset."))
}
if(na2null==T) x[is.na(x)]<-0
print("Uploaded table")
print(x)
print("Structure of table")
str(x)
if (attrib==T){
print("Attributes of table")
print(attributes(x))
}
x
}
LoadData()
LoadData<-function(type="clipboard",first.col=2, na2null=T, attrib=T) {
print("Copy data into cliboard")
invisible(readline(prompt="Press [enter] to continue"))
tryCatch(silent=T,
expr = {
x<-read.table(type, h=T, sep = "\t")
message("Dataset successfully uploaded.")
},
error = function(e){
message("Dataset inaccurately uploaded, Try again.")
print(e)
},
warning = function(w){
message("Warning! Dataset inaccurately uploaded. Try again.")
print(w)
},
finally = {
message("You can continue.")
}
)
attr(x,"Spec_col")<-first.col:ncol(x)
attr(x, "Number of species")<-nrow(x)
attr(x,"Number of samples")<-ncol(x)-1
y<-unlist(lapply(as.list(first.col:ncol(x)),function(x1) is.numeric((x[,x1]))))
if(all(y, na.rm = TRUE)==F){
colbad<-which(y==FALSE) + first.col-1
cat(paste("Samples",paste(names(x)[colbad],collapse=","),"are not numeric"))
cat("\n")
answ=readline(prompt="Continue and skip non-numeric columns? y/n  ")
if(answ=="y") x<-x[-colbad] else stop(paste("Function was terminated. Try to fix the dataset."))
}
if(na2null==T) x[is.na(x)]<-0
print("Uploaded table")
print(x)
print("Structure of table")
str(x)
if (attrib==T){
print("Attributes of table")
print(attributes(x))
}
return(x)
}
LoadData()
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, col = c("gray0", "gray48", "gray84")){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,], ylim = c(0, maxA2 + 30), las = 2, ylab = "Abundance",
legend.text = c("F1", "F2", "Other"), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3))
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
LoadData<-function(file="clipboard",first.col=2, na2null=T, attrib=T) {
cat(paste("Copy data into cliboard."))
invisible(readline(prompt="Press [enter] to continue. "))
tryCatch(silent=T,
expr = {
x<-read.table(file, h=T, sep = "\t")
message("Dataset successfully uploaded.")
},
error = function(e){
message("Dataset inaccurately uploaded, Try again.")
print(e)
},
warning = function(w){
message("Warning! Dataset inaccurately uploaded. Try again.")
print(w)
},
finally = {
attr(x,"Spec_col")<-first.col:ncol(x)
attr(x, "Number of species")<-nrow(x)
attr(x,"Number of samples")<-ncol(x)-1
y<-unlist(lapply(as.list(first.col:ncol(x)),function(x1) is.numeric((x[,x1]))))
if(all(y, na.rm = TRUE)==F){
colbad<-which(y==FALSE) + first.col-1
cat(paste("Samples",paste(names(x)[colbad],collapse=","),"are not numeric"))
cat("\n")
answ=readline(prompt="Continue and skip non-numeric columns? y/n  ")
if(answ=="y") x<-x[-colbad] else stop(paste("Function was terminated. Try to fix the dataset."))
}
if(na2null==T) x[is.na(x)]<-0
if (attrib==T){
print("Attributes of table")
print(attributes(x))
}
cat(paste("Short data:"), "\n")
print(x[1:5,])
cat("\n")
message("You can continue.")
}
)
return(x)
}
LoadData()
data<-LoadData()
Ab<-Abundance(data)
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, col = c("gray0", "gray48", "gray84"),...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,], ylim = c(0, maxA2 + 30), las = 2, ylab = "Abundance",
legend.text = c("F1", "F2", "Other"), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3),...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,col=1:3)
Ab<-Abundance(data,col=1:3,xlab="samples")
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, col = c("gray0", "gray48", "gray84"),ylab = "Abundance",...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,], ylim = c(0, maxA2 + 30), las = 2,
legend.text = c("F1", "F2", "Other"), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3),...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, col = c("gray0", "gray48", "gray84"),ylab = "Abundance",...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,], ylim = c(0, maxA2 + 30), las = 2, ylab = ylab
legend.text = c("F1", "F2", "Other"), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3),...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, col = c("gray0", "gray48", "gray84"),ylab = "Abundance",...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,], ylim = c(0, maxA2 + 30), las = 2, ylab = ylab,
legend.text = c("F1", "F2", "Other"), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3),...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, col = c("gray0", "gray48", "gray84"),...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,], ylim = c(0, maxA2 + 30), las = 2, ylab = ylab,
legend.text = c("F1", "F2", "Other"), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3),...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10,...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5),ylim = c(0, maxA2 + 30), las = 2, ylab = "Abundance",
legend.text = c("F1", "F2", "Other"), col = c("gray0", "gray48", "gray84"),
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10,...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5),ylim = c(0, maxA2 + 30), las = 2, ylab = "Abundance", col = c("gray0", "gray48", "gray84"),
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c("F1", "F2", "Other"),...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5),ylim = c(0, maxA2 + 30), las = 2, col = c("gray0", "gray48", "gray84"),
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c("F1", "F2", "Other"),ylab = ylab, ...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance",...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5), las = 2, col = c("gray0", "gray48", "gray84"),
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c("F1", "F2", "Other"),ylab = ylab,ylim = c(0, maxA2 + 30), ...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance", col = c("gray0", "gray48", "gray84"), ...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5), las = 2,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c("F1", "F2", "Other"),ylab = ylab,ylim = c(0, maxA2 + 30), col = col ...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance", col = c("gray0", "gray48", "gray84"), ...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5), las = 2,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3))
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c("F1", "F2", "Other"),ylab = ylab,ylim = c(0, maxA2 + 30), col = col, ...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
Abundance<-function(x, first.col = 2, graph = T, legh = 50, legl = 10, ylab = "Abundance", col = c("gray0", "gray48", "gray84"), ...){
x<-x[,first.col:ncol(x)]
TotalA<-apply(x, 2, function(f5) sum(f5))
F1<-apply(x, 2, function(f1) sum(f1==1))
F2A<-apply(x, 2, function(f2) sum(f2==2))*2
OtherA<-TotalA-F1-F2A
Atab<-rbind(F1,F2A,OtherA,TotalA)
rownames(Atab)<-c("F1", "F2", "Other", "Total")
maxA<-max(Atab[1,] + Atab[2,])
maxA2<-max(Atab[4,])
if (graph == T){
par(mfrow=c(1,1), mar=c(3.85,4,4,0.5), las = 2)
posgr = barplot(Atab, plot = F)
barplot(Atab[-4,],legend.text = c("F1", "F2", "Other"),ylab = ylab,ylim = c(0, maxA2 + 30), col = col,
args.legend = list(bty = "n", x = legl, y = maxA2+legh, ncol = 3), ...)
text(posgr, TotalA, lab=TotalA, cex=0.9, pos=3)
}
return(Atab)
}
Ab<-Abundance(data,xlab="samples",ylab="početnost")
