git remote add origin git@github.com:VeronikaPrielozna/detectD.git
git branch -M main
git push -u origin main
library(usethis)
?use_github()
edit_r_environ()
use_github(protocol = "https", auth_token= Sys.getenv("GITHUB_PAT"))
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
echo "# detectD" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:VeronikaPrielozna/detectD.git
git push -u origin main
git remote add origin git@github.com:VeronikaPrielozna/detectD.git
use_github(protocol = "https", auth_token = Sys.getenv("GITHUB_PAT"))
LoadData<-function(type="clipboard",first.col=2, na2null=T, attrib=T) {
print("Copy data into cliboard")
invisible(readline(prompt="Press [enter] to continue"))
tryCatch(silent=T,
expr = {
x<-read.table(type, h=T, sep = "\t")
message("Dataset successfully uploaded.")
},
error = function(e){
message("Dataset inaccurately uploaded, Try again.")
print(e)
},
warning = function(w){
message("Warning! Dataset inaccurately uploaded. Try again.")
print(w)
},
finally = {
message("You can continue.")
}
)
attr(x,"Spec_col")<-first.col:ncol(x)
attr(x, "Number of species")<-nrow(x)
attr(x,"Number of samples")<-ncol(x)-1
y<-unlist(lapply(as.list(first.col:ncol(x)),function(x1) is.numeric((x[,x1]))))
if(all(y, na.rm = TRUE)==F){
colbad<-which(y==FALSE) + first.col-1
cat(paste("Samples",paste(names(x)[colbad],collapse=","),"are not numeric"))
cat("\n")
answ=readline(prompt="Continue and skip non-numeric columns? y/n  ")
if(answ=="y") x<-x[-colbad] else stop(paste("Function was terminated. Try to fix the dataset."))
}
if(na2null==T) x[is.na(x)]<-0
print("Uploaded table")
print(x)
print("Structure of table")
str(x)
if (attrib==T){
print("Attributes of table")
print(attributes(x))
}
x
}
LoadData()
LoadData<-function(type="clipboard",first.col=2, na2null=T, attrib=T) {
print("Copy data into cliboard")
invisible(readline(prompt="Press [enter] to continue"))
tryCatch(silent=T,
expr = {
x<-read.table(type, h=T, sep = "\t")
message("Dataset successfully uploaded.")
},
error = function(e){
message("Dataset inaccurately uploaded, Try again.")
print(e)
},
warning = function(w){
message("Warning! Dataset inaccurately uploaded. Try again.")
print(w)
},
finally = {
message("You can continue.")
}
)
attr(x,"Spec_col")<-first.col:ncol(x)
attr(x, "Number of species")<-nrow(x)
attr(x,"Number of samples")<-ncol(x)-1
y<-unlist(lapply(as.list(first.col:ncol(x)),function(x1) is.numeric((x[,x1]))))
if(all(y, na.rm = TRUE)==F){
colbad<-which(y==FALSE) + first.col-1
cat(paste("Samples",paste(names(x)[colbad],collapse=","),"are not numeric"))
cat("\n")
answ=readline(prompt="Continue and skip non-numeric columns? y/n  ")
if(answ=="y") x<-x[-colbad] else stop(paste("Function was terminated. Try to fix the dataset."))
}
if(na2null==T) x[is.na(x)]<-0
print("Uploaded table")
print(x)
print("Structure of table")
str(x)
if (attrib==T){
print("Attributes of table")
print(attributes(x))
}
return(x)
}
LoadData()
